doctype html
head
  link(rel="stylesheet" type="text/css" href="/style.css")
  script.
    window.model = !{JSON.stringify(model)};
    window.cells = !{JSON.stringify(cells)};
  script(src="https://code.jquery.com/jquery-3.1.1.min.js" integrity="sha256-hVVnYaiADRTO2PzUGmuLJr8BLUSjGIZsDYGmIJLv2b8=" crossorigin="anonymous")
  meta(name="viewport" content="width=device-width, initial-scale=1")
  link(rel="icon" type="image/png" href="/dp-cool-128.png")
  title Self Tracker
body
  -
    const renderInput = activity => {
      const cell = cells[activity.col] || {}
      switch(activity.type) {
        case 'bool':
          return `
            <div class="radios" data-col="${activity.col}" data-type="bool">
              <label>
                <input type="radio" value="1" name="bool-${activity.col}" ${cell.value === "1" ? 'checked' : ''} />
                <span>Yes</span>
              </label>
              <label>
                <input type="radio" value="0" name="bool-${activity.col}" ${cell.value === "0" ? 'checked' : ''} />
                <span>No</span>
              </label>
            </div>
          `
        case 'time':
          const apZr = val => (val < 10 ? '0' : '') + val
          const hour = apZr(parseInt(cell.numericValue * 24))
          const minute = apZr(Math.round((cell.numericValue * 24) % 1 * 60))
          return `<input type="time" ${cell.value ? `value="${hour}:${minute}"` : ''} data-col="${activity.col}" />`

        default:
          return '---'
      }
    }

  #workout(data-row=cells.row)
    .nav-container
      .nav
        a.active(href="/")= isAndroid ? '🏃' : '🏋🏼'
        a(href="/balance") 💸
    h3.date
      a.arrow(href=`/workout/past/${count + 1}`) ◀
      span= date.format('ll')
      a.arrow(href=`/workout/past/${count - 1}`, class=(!count ? 'invisible' : '')) ▶
    .score-img-container
      - const percent = cells[model.max].numericValue * 100 || 0
      - const hsl_h = ([ 0, 22, 34, 46, 58, 82, 106])[Math.floor(Math.abs(percent - .1)/(100 / 7))]
      .hat-bg
        .percent(class=percent > 40 ? 'more' : percent < 20 ? 'less' : '')= parseInt(percent) + '%'
        - const diff = cells[model.max + 1].numericValue
        //- ▲▼▴▾↑↓⇑⇓⇧⇩⬆⬇
        .diff(class=(diff > 0.35 ? 'high' : (diff < -0.35 ? 'low' : 'avg')))
          if diff > 0
            = `⬆ ${(diff + 1).toFixed(1).replace(/\.0$/, '')}x`
          else if diff < 0
            = `⬇ ${(Math.abs(diff) * 100).toFixed(0)}%`
        .percent-filler(style=`height: ${percent}%; background: hsl(${hsl_h || 0}, 100%, 50%);`)
      img(src='/dp-shape.png', class=percent < 20 ? 'less' : '')
    h2 Do it! Just DDDO it!!!
    table
      each activity in (model.values || [])
        tr.activity
          td.name= activity.name
          if !activity.children
            td!= renderInput(activity)
          else
            td
        if activity.children
          each child in activity.children
            tr.child
              td.name= child.name
              td!= renderInput(child)
    button.save Save

  script(src="/script.js")
